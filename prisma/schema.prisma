generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String  @map("user_id")
  type              String
  provider          String
  providerAccountId String  @map("provider_account_id")
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique @map("session_token")
  userId       String   @map("user_id")
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model User {
  id            String               @id @default(cuid())
  name          String?
  nik           String?
  placeOfBirth  String?
  dateOfBirth   String?
  gender        String?
  tahunLulus    String?
  major         String?
  address       String?
  noTelphone    String?
  email         String?             @unique
  status        String?
  startStatus   String?
  whatStatus    String?
  whereStatus   String?
  relevance     String?
  bossName      String?
  bossPosition  String?
  salary        String?

  image         String?
  emailVerified DateTime?            @map("email_verified")
  password      String?
  role          String               @default("user")

  updatedAt     DateTime             @updatedAt
  createdAt     DateTime             @default(now())

  accounts      Account[]
  sessions      Session[]

  @@map("users")
}

model VerificationToken {
  identifier String
  token      String
  expires    DateTime

  @@unique([identifier, token])
  @@map("verification_tokens")
}

// model AlumniBekerja {
//   id              String   @id @default(cuid())
//   tempatKerja     String
//   alamat          String
//   jabatan         String
//   statusPekerjaan Boolean
//   penghasilan     Int
//   createdAt       DateTime @default(now())
//   updatedAt       DateTime @updatedAt
//   userId          String
//   user            User     @relation(fields: [userId], references: [id], onDelete: Cascade)
// }

// model AlumniBerwirausaha {
//   id          String   @id @default(cuid())
//   namaUsaha       String
//   penghasilan Int
//   createdAt   DateTime @default(now())
//   updatedAt   DateTime @updatedAt
//   userId      String
//   user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
// }

// model AlumniKuliah {
//   id        String   @id @default(cuid())
//   namaKuliah    String
//   alamat    String
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
//   userId    String
//   user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
// }
